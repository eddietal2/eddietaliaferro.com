{"version":3,"mappings":"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","names":["routes","path","component","_user_profile_page__WEBPACK_IMPORTED_MODULE_0__","UserProfilePageRoutingModule","imports","_angular_router__WEBPACK_IMPORTED_MODULE_3__","exports","UserProfilePageModule","_angular_common__WEBPACK_IMPORTED_MODULE_4__","_angular_forms__WEBPACK_IMPORTED_MODULE_5__","_ionic_angular__WEBPACK_IMPORTED_MODULE_6__","_user_profile_routing_module__WEBPACK_IMPORTED_MODULE_0__","declarations","_user_profile_page__WEBPACK_IMPORTED_MODULE_1__","UserProfilePage","auth","storage","pictureService","formBuilder","alertController","toastController","helper","get","TOKEN_KEY","then","decoded","decodeToken","token","console","clear","log","userFullName","subscribe","userFirstName","data","split","userLastName","userPicture","userEmail","userProfileForm","group","firstName","lastName","picture","email","oldEmail","password","patchValue","value","wrongPasswordAlert","pictureDataURL","updatedProfile","fullName","newEmail","updateProfile","remove","next","successToast","formData","FormData","pictureFile","File","dataURLtoBlob","append","userProfilePictureUpload","pictureURL","checkEmail","event","userCurrentPicture","document","getElementById","style","display","pictureOne","reader","FileReader","readAsDataURL","target","files","addEventListener","result","dataurl","arr","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","Blob","type","create","cssClass","header","inputs","name","id","placeholder","buttons","text","role","handler","e","currentPassword","newPassword","reTypeNewPassword","changePassword","dismiss","alert","present","msg","message","onDidDismiss","duration","toast","src_app_services_auth_auth_service__WEBPACK_IMPORTED_MODULE_2__","_ionic_storage__WEBPACK_IMPORTED_MODULE_4__","src_app_services_pictures_pictures_service__WEBPACK_IMPORTED_MODULE_3__","_ionic_angular__WEBPACK_IMPORTED_MODULE_7__","_auth0_angular_jwt__WEBPACK_IMPORTED_MODULE_8__","selector","template","__webpack_exports__"],"sources":["webpack:///src/app/pages/user-profile/user-profile-routing.module.ts","webpack:///src/app/pages/user-profile/user-profile.module.ts","webpack:///src/app/pages/user-profile/user-profile.page.ts","webpack:///src/app/pages/user-profile/user-profile.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UserProfilePage } from './user-profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserProfilePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UserProfilePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UserProfilePageRoutingModule } from './user-profile-routing.module';\n\nimport { UserProfilePage } from './user-profile.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    UserProfilePageRoutingModule\n  ],\n  declarations: [UserProfilePage]\n})\nexport class UserProfilePageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { PicturesService } from 'src/app/services/pictures/pictures.service';\nimport { Storage } from '@ionic/storage';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { AlertController, ToastController } from '@ionic/angular';\n\n\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.page.html',\n  styleUrls: ['./user-profile.page.scss'],\n})\nexport class UserProfilePage implements OnInit {\n  userProfileForm: FormGroup;\n  userFullName: Subscription;\n  userFirstName: string;\n  userLastName: string;\n  userPicture: string;\n  pictureDataURL: any;\n  pictureS3Link: any;\n  userEmail: any;\n  newUserEmail: any;\n  userPassword: any;\n  TOKEN_KEY = 'access_token';\n\n  constructor(\n    private auth: AuthService,\n    private storage: Storage,\n    private pictureService: PicturesService,\n    private formBuilder: FormBuilder,\n    private alertController: AlertController,\n    private toastController: ToastController,\n    private helper: JwtHelperService,\n  ) { }\n\n  ngOnInit() {\n    this.storage.get(this.TOKEN_KEY).then(\n      token => {\n        const decoded = this.helper.decodeToken(token);\n        console.clear();\n        console.log(decoded);\n      }\n    );\n    this.userFullName = this.auth.userFullName.subscribe(\n      data => {\n        this.userFirstName = data.split(\" \")[0];\n        this.userLastName = data.split(\" \")[1];\n        console.log(this.userFirstName)\n        console.log(this.userLastName )\n    });\n    this.auth.userPicture.subscribe(\n      data => {\n        console.log(data);\n        this.userPicture = data;\n    });\n    this.auth.userEmail.subscribe(\n      data => {\n        console.log(data);\n        return this.userEmail = data;\n    });\n    this.userProfileForm = this.formBuilder.group({\n      firstName: ['', [Validators.required]],\n      lastName: ['', [Validators.required]],\n      picture: ['', [Validators.required]],\n      email: ['', [Validators.required]],\n      oldEmail: [this.userEmail, [Validators.required]],\n      password: ['', [Validators.required,]],\n    });\n    this.userProfileForm.patchValue({\n      firstName: this.userFirstName,\n      lastName: this.userLastName,\n      email: this.userEmail,\n    })\n  }\n  editProfile() {\n\n    // If Password Input is Empty\n    if(this.userProfileForm.value.password === '') {\n      return this.wrongPasswordAlert('You forgot to enter a password!')\n    }\n\n    // If currenty Email is remaining the same.\n    if(this.userProfileForm.value.email === this.userEmail) {\n      console.log('There emails were the same!');\n      if(!this.pictureDataURL) {\n        let updatedProfile = {\n          fullName: this.userProfileForm.value.firstName + ' ' + this.userProfileForm.value.lastName,\n          oldEmail: this.userEmail,\n          newEmail: this.userProfileForm.value.email,\n          password: this.userProfileForm.value.password,\n          picture: this.userPicture,\n        }\n        this.auth.updateProfile(updatedProfile).subscribe(\n          data => {\n            // console.clear()\n            console.log('Change Picture Update Profile Data: ')\n            console.log(data)\n            if(data['isMatch'] === true) {\n                this.storage.remove(this.TOKEN_KEY);\n                this.auth.userFullName.next(data['fullName']);\n                this.auth.userEmail.next(data['newEmail']);\n                this.auth.userPicture.next(data['picture']);\n                this.successToast('You have successfully updated your profile!')\n                this.userProfileForm.patchValue({\n                  password: ''\n                })\n            }\n        })\n      }\n      console.log('Getting Thumbnail S3 URL');\n      const formData = new FormData();\n      let pictureFile = new File([this.dataURLtoBlob(this.pictureDataURL)], 'user-profile-picture.png');\n      formData.append('user-profile-picture', pictureFile);\n        this.pictureService.userProfilePictureUpload(formData).subscribe(\n            pictureURL => {\n              this.userProfileForm.value.picture = pictureURL['objectUrl'];\n              console.clear();\n              console.log('USER EMAIL');\n              console.log(this.userEmail);\n\n              let updatedProfile = {\n                fullName: this.userProfileForm.value.firstName + ' ' + this.userProfileForm.value.lastName,\n                oldEmail: this.userEmail,\n                newEmail: this.userProfileForm.value.email,\n                password: this.userProfileForm.value.password,\n                picture: this.userProfileForm.value.picture,\n              }\n              this.auth.updateProfile(updatedProfile).subscribe(\n                data => {\n                  console.log(data);\n                  if(data['isMatch'] === true) {\n                    this.storage.remove(this.TOKEN_KEY);\n                    this.auth.userFullName.next(data['fullName']);\n                    this.auth.userEmail.next(data['newEmail']);\n                    this.auth.userPicture.next(data['picture']);\n                    this.successToast('You have successfully updated your profile!')\n                    this.userProfileForm.patchValue({\n                      password: ''\n                    })\n                  }\n              })\n        })\n      }\n    // If current email is being changed via the email input\n    else {\n      console.log('The emails were not the same');\n      this.auth.checkEmail(this.userProfileForm.value.email).subscribe(\n        data => {\n          if(!data['isEmail']) {\n            console.log('No one else has this email!')\n            // If the user does NOT change their profile picture\n            if(!this.pictureDataURL) {\n              let updatedProfile = {\n                fullName: this.userProfileForm.value.firstName + ' ' + this.userProfileForm.value.lastName,\n                oldEmail: this.userEmail,\n                newEmail: this.userProfileForm.value.email,\n                password: this.userProfileForm.value.password,\n                picture: this.userPicture\n              }\n              console.log(updatedProfile)\n              this.auth.updateProfile(updatedProfile).subscribe(\n                data => {\n                  console.log(data);\n                  if(data['isMatch'] === true) {\n                    this.auth.userFullName.next(data['fullName']);\n                    this.auth.userEmail.next(data['email']);\n                    this.auth.userPicture.next(data['picture']);\n                    this.successToast('You have successfully updated your profile!')\n                    this.userProfileForm.value.password = '';\n                  }\n              })\n            }\n            // If user uploads a new Profile Picture\n            else {\n            console.log('Getting Thumbnail S3 URL');\n            const formData = new FormData();\n            let pictureFile = new File([this.dataURLtoBlob(this.pictureDataURL)], 'user-profile-picture.png');\n            formData.append('user-profile-picture', pictureFile);\n              this.pictureService.userProfilePictureUpload(formData).subscribe(\n                pictureURL => {\n                  this.userProfileForm.value.picture = pictureURL['objectUrl'];\n\n                  let updatedProfile = {\n                    fullName: this.userProfileForm.value.firstName + ' ' + this.userProfileForm.value.lastName,\n                    oldEmail: this.userEmail,\n                    newEmail: this.userProfileForm.value.email,\n                    password: this.userProfileForm.value.password,\n                    picture: this.userProfileForm.value.picture,\n                  }\n                  this.auth.updateProfile(updatedProfile).subscribe(\n                    data => {\n                      console.log(data);\n                      if(data['isMatch'] === true) {\n                        this.auth.userFullName.next(data['fullName']);\n                        this.auth.userEmail.next(data['email']);\n                        this.auth.userPicture.next(data['picture']);\n                        this.successToast('You have successfully updated your profile!')\n                        this.userProfileForm.value.password = '';\n                      }\n                  })\n            })\n            }\n          } else {\n            console.log('SOMEONE HAS THIS EMAIL! Retry')\n          }\n        }\n      )\n    }\n  }\n  getPictureFile(event) {\n    let userCurrentPicture = document.getElementById('user-current-picture');\n    userCurrentPicture.style.display = 'none';\n    console.log(event);\n    const pictureOne = document.getElementById('user-profile-picture');\n    let reader = new FileReader();\n\n    if (pictureOne) {\n      reader.readAsDataURL(event.target.files[0]);\n    }\n    reader.addEventListener('load', () => {\n      // Convert image file ot base64 string\n      this.pictureDataURL = reader.result;\n      console.log(this.pictureDataURL);\n      }, false);\n  }\n  dataURLtoBlob(dataurl) {\n    // console.log(dataurl)\n    const arr = dataurl.split(',');\n    const mime = arr[0].match(/:(.*?);/)[1];\n    const bstr = atob(arr[1]);\n    let n = bstr.length;\n    const u8arr = new Uint8Array(n);\n\n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n);\n    }\n    return new Blob([u8arr], {type: mime});\n  }\n  changePassword() {\n    \n  }\n  async presentAlertPrompt(email) {\n    const alert = await this.alertController.create({\n      cssClass: 'change-password-alert',\n      header: 'Change Password',\n      inputs: [\n        {\n          name: 'current-password',\n          id: 'current-password',\n          type: 'password',\n          placeholder: 'Password'\n        },\n        {\n          name: 'new-password',\n          id: 'new-password',\n          type: 'password',\n          placeholder: 'New Password'\n        },\n        {\n          name: 'retype-new-password',\n          id: 'retype-new-password',\n          type: 'password',\n          placeholder: 'Re-Type New Password'\n        },\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            console.log('Confirm Cancel');\n          }\n        }, {\n          text: 'Ok',\n\n          handler: (e) => {\n            console.log(e);\n            let currentPassword = e['current-password'];\n            let newPassword = e['new-password'];\n            let reTypeNewPassword = e['retype-new-password'];\n\n            if(currentPassword == newPassword) {\n              console.log('New password cannot be the same as old password');\n              return false;\n            }\n            else if (newPassword != reTypeNewPassword) {\n              console.log('New Passwords do not match!');\n              this.wrongPasswordAlert('New passwords do not match. Please double check both entries.');;\n              return false ;\n            }\n              this.auth.changePassword(email, currentPassword, newPassword).subscribe(\n                data => {\n                  if(!data) {\n                    console.log(data);\n                    this.wrongPasswordAlert('The password was wrong. Please end your current password again.');\n                    return;\n                  }\n                  if(data) {\n                    this.successToast('You have successfully changed your password');\n                    this.alertController.dismiss()\n                    return;\n                  }\n                }\n              )\n            return false;\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n  async wrongPasswordAlert(msg) {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Wrong Password!',\n      message: msg,\n      buttons: ['OK']\n    });\n\n    await alert.present();\n\n    const { role } = await alert.onDidDismiss();\n    console.log('onDidDismiss resolved with role', role);\n  }\n  async successToast(msg) {\n    const toast = await this.toastController.create({\n      message: msg,\n      // cssClass: 'success-toast',\n      duration: 2000\n    });\n    toast.present();\n  }\n\n\n}\n","export default \"<ion-content>\\n  <ion-grid>\\n    <ion-row class=\\\"ion-justify-content-center\\\">\\n      <ion-col class=\\\"page-wrapper ion-text-center\\\" size-xs=\\\"11\\\" size-sm=\\\"9\\\" size-md=\\\"8\\\" size-lg=\\\"6\\\" size-xl=\\\"5\\\">\\n            <input type=\\\"file\\\" (change)=\\\"getPictureFile($event)\\\"  name=\\\"user-profile-picture\\\" id=\\\"user-profile-picture\\\" class=\\\"purple-button\\\" style=\\\"margin: 3em auto;\\\">\\n            <img id=\\\"user-current-picture\\\" *ngIf=\\\"userPicture\\\" width=\\\"200\\\" style=\\\"border-radius: 200px;\\\" src=\\\"{{userPicture}}\\\" alt=\\\"User Profile Picture\\\">\\n            <img id=\\\"user-new-picture\\\" *ngIf=\\\"pictureDataURL\\\" width=\\\"200\\\" style=\\\"border-radius: 200px;\\\" src=\\\"{{pictureDataURL}}\\\" alt=\\\"User Profile Picture\\\">\\n            <label for=\\\"user-profile-picture\\\">Change Profile Picture</label>\\n            <ion-button class=\\\"red-button\\\" style=\\\"width: 200px; margin: 3em auto;\\\" (click)=\\\"presentAlertPrompt(this.userEmail)\\\">\\n              Change Password\\n            </ion-button>\\n      </ion-col>\\n      <ion-col class=\\\"ion-text-center\\\" size-xs=\\\"11\\\" size-sm=\\\"9\\\" size-md=\\\"8\\\" size-lg=\\\"5\\\" size-xl=\\\"4\\\">\\n        <div class=\\\"alert\\\">\\n          <p>You can update your profile here! Make sure all your information is correct before making any changes.</p>\\n        </div>\\n        <form [formGroup]=\\\"userProfileForm\\\" (ngSubmit)=\\\"editProfile()\\\">\\n              <ion-item lines=\\\"none\\\">\\n                <ion-input formControlName=\\\"firstName\\\" type=\\\"text\\\" placeholder=\\\"First Name\\\"></ion-input>\\n              </ion-item>\\n              <ion-item lines=\\\"none\\\">\\n                <ion-input formControlName=\\\"lastName\\\" type=\\\"text\\\" placeholder=\\\"Last Name\\\"></ion-input>\\n              </ion-item>\\n              <ion-item lines=\\\"none\\\">\\n                <ion-input formControlName=\\\"email\\\" type=\\\"email\\\" placeholder=\\\"Email\\\"></ion-input>\\n              </ion-item>\\n              <ion-item lines=\\\"none\\\">\\n                <ion-input formControlName=\\\"password\\\" type=\\\"password\\\" placeholder=\\\"Password\\\"></ion-input>\\n              </ion-item>\\n              <!-- Alert or Modal popus up with Password Change. -->\\n              <!-- Have the user log back in with their new password -->\\n              <ion-button class=\\\"green-button\\\" type=\\\"submit\\\" style=\\\"margin: 3em auto;\\\">\\n                Edit Profile\\n              </ion-button>\\n        </form>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\";"]}